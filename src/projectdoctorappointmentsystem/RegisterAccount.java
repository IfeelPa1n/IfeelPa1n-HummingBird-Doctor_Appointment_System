/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectdoctorappointmentsystem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author GabuyaJanson
 */
public class RegisterAccount extends javax.swing.JFrame {
    private boolean PACexsist;
    private boolean SACexsist;
    private boolean DACexsist;
    private boolean PTexsist;
    private boolean STexsist;
    private boolean DTexsist;
    private boolean option;
    /**
     * Creates new form DoctorPage
     */
    public RegisterAccount() {
        initComponents();
        ClassHolder.setEnabled(false);
        ClassHolder.setText("Empty");
        goBack.setVisible(false);
        TransferVer2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AccountUser = new javax.swing.JTextField();
        AccountPass = new javax.swing.JTextField();
        RegisterAccounts = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ClassHolder = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Transfer = new javax.swing.JButton();
        ExitForm = new javax.swing.JButton();
        goBack = new javax.swing.JButton();
        TransferVer2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register Account");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectdoctorappointmentsystem/HB-Color-logo4.png"))); // NOI18N

        jLabel2.setText("USERNAME");

        jLabel3.setText("PASSWORD");

        AccountUser.setMinimumSize(new java.awt.Dimension(150, 75));
        AccountUser.setPreferredSize(new java.awt.Dimension(150, 30));
        AccountUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountUserActionPerformed(evt);
            }
        });

        AccountPass.setMinimumSize(new java.awt.Dimension(150, 75));
        AccountPass.setPreferredSize(new java.awt.Dimension(150, 30));
        AccountPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountPassActionPerformed(evt);
            }
        });

        RegisterAccounts.setText("Register");
        RegisterAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterAccountsActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"PATIENT"},
                {"DOCTOR"},
                {"SECRETARY"}
            },
            new String [] {
                "CLASS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        ClassHolder.setPreferredSize(new java.awt.Dimension(71, 26));
        ClassHolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassHolderActionPerformed(evt);
            }
        });

        jLabel4.setText("SELECTED CLASS");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("PLEASE SELECT A ACCOUNT CLASS");

        Transfer.setText("Proceed");
        Transfer.setPreferredSize(new java.awt.Dimension(75, 26));
        Transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferActionPerformed(evt);
            }
        });

        ExitForm.setText("Exit Form");
        ExitForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitFormActionPerformed(evt);
            }
        });

        goBack.setText("Return");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });

        TransferVer2.setText("Proceed");
        TransferVer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferVer2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(45, 45, 45))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(AccountUser, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(ClassHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(113, 113, 113)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(goBack, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(RegisterAccounts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AccountPass, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(Transfer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ExitForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TransferVer2)))
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AccountUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AccountPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RegisterAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClassHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TransferVer2))
                .addGap(18, 18, 18)
                .addComponent(ExitForm, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goBack, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(231, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
  
    //REGISTER BUTTON CODE
    private void RegisterAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterAccountsActionPerformed
        // TODO add your handling code here:
        // EVERYTHING IS FINAL & FIXED!
        // WARNING DO NOT MODIFY THIS CODE LINE (185-252) 
        PACexsist = false;
        SACexsist = false;
        DACexsist = false;
       
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel(); 
        int selectedRowIndex = jTable1.getSelectedRow();
        
        String type = (model.getValueAt(selectedRowIndex, 0).toString());
        
        
        switch(type){
            case "PATIENT":
                //Checks if account Exsist in the DATABASE.java under the class Patient
                PACexsist = Database.PatientDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                SACexsist = Database.SecretaryDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                DACexsist = Database.DoctorDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                //if PACexsist return TRUE command line 192 will excecute telling the User account have exsisted
                
                if((!PACexsist && SACexsist) || (!PACexsist && DACexsist)){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! In A Different Class, Please Try Again");
                } else if(PACexsist){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! Please Try Again.");
                } else{
                //if PACexsist return false command line 207-208 will excecute the new account User and Pass will be stored under the class Patient
                Database.PatientDataRegister.register(AccountUser.getText(), AccountPass.getText(), type);
                JOptionPane.showMessageDialog(null, "Patient Account Registered Succesfully");
                
                }
                break;
                
            case "SECRETARY":
                //Check if account Exsist in the DATABASE.java under the class Secretary
                SACexsist = Database.SecretaryDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                PACexsist = Database.PatientDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                DACexsist = Database.DoctorDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                
                //If SACexsist returns True Command line 206 will excecute telling the User accound have exsisted
                if((!SACexsist && PACexsist) || (!SACexsist && DACexsist)){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! In A Different Class, Please Try Again");
                } else if(SACexsist){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! Please Try Again.");
                } else{
                    //if PACexsist return false command line 207-208 will excecute the new account User and Pass will be stored under the class Secretary
                    Database.SecretaryDataRegister.register(AccountUser.getText(), AccountPass.getText(), type);
                    JOptionPane.showMessageDialog(null, "Secretary Account Registered Succesfully");
                    
                }
                break;
            case "DOCTOR":
                //Check if account Exsist in the DATABASE.java under the class Docotr
                DACexsist = Database.DoctorDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                PACexsist = Database.PatientDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                SACexsist = Database.SecretaryDataRegister.validate(AccountUser.getText(), AccountPass.getText());
                
                if((!DACexsist && SACexsist) || (!DACexsist && PACexsist)){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! In A Different Class, Please Try Again");
                } else if(DACexsist){
                    JOptionPane.showMessageDialog(null, "THIS ACCOUNT HAVE BEEN TAKEN! Please Try Again.");
                } else{
                    //if PACexsist return false command line 207-208 will excecute the new account User and Pass will be stored under the class Doctor
                    Database.DoctorDataRegister.register(AccountUser.getText(), AccountPass.getText(), type);
                    JOptionPane.showMessageDialog(null, "Doctor Account Registered Succesfully");
                    
                }
                break;
             }
             
        
    }//GEN-LAST:event_RegisterAccountsActionPerformed

    private void AccountUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountUserActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AccountUserActionPerformed

    private void AccountPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountPassActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AccountPassActionPerformed

    private void ClassHolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassHolderActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ClassHolderActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //FINAL CODE DONT TOUCH!
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel(); 
        int selectedRowIndex = jTable1.getSelectedRow();
        option = false;
        ClassHolder.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void TransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferActionPerformed
        // TODO add your handling code here:
        
        PTexsist = false;
        STexsist = false;
        DTexsist = false;
        
        STexsist = Database.SecretaryDataRegister.validate(AccountUser.getText(), AccountPass.getText());
        PTexsist = Database.PatientDataRegister.validate(AccountUser.getText(), AccountPass.getText());
        DTexsist = Database.DoctorDataRegister.validate(AccountUser.getText(), AccountPass.getText());
        
        if(STexsist || PTexsist || DTexsist){
          LandingPage nextPPT = new LandingPage();
          nextPPT.show();
          dispose();
        } else{
            JOptionPane.showMessageDialog(null, "Please Register an account first!");
        }
    }//GEN-LAST:event_TransferActionPerformed

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        // TODO add your handling code here:
        ProjectDoctorAppointmentSystem O1 = new ProjectDoctorAppointmentSystem();
        O1.show();
        dispose();
    }//GEN-LAST:event_goBackActionPerformed

    private void ExitFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitFormActionPerformed
        // TODO add your handling code here:
        ExitForm.setVisible(false);
        goBack.setVisible(true);
        jTable1.setEnabled(false);
        AccountUser.setEnabled(false);
        AccountPass.setEnabled(false);
        RegisterAccounts.setEnabled(false);
        Transfer.setEnabled(false);
        JOptionPane.showMessageDialog(null, "You have Exited the form!");
    }//GEN-LAST:event_ExitFormActionPerformed

    private void TransferVer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferVer2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_TransferVer2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountPass;
    private javax.swing.JTextField AccountUser;
    private javax.swing.JTextField ClassHolder;
    public javax.swing.JButton ExitForm;
    private javax.swing.JButton RegisterAccounts;
    public javax.swing.JButton Transfer;
    public javax.swing.JButton TransferVer2;
    private javax.swing.JButton goBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
